class AbrigoAnimais {
  constructor() {
    this.animais = {
      Rex: { tipo: 'cão', brinquedos: ['RATO', 'BOLA'] },
      Mimi: { tipo: 'gato', brinquedos: ['BOLA', 'LASER'] },
      Fofo: { tipo: 'gato', brinquedos: ['BOLA', 'RATO', 'LASER'] },
      Zero: { tipo: 'gato', brinquedos: ['RATO', 'BOLA'] },
      Bola: { tipo: 'cão', brinquedos: ['CAIXA', 'NOVELO'] },
      Bebe: { tipo: 'cão', brinquedos: ['LASER', 'RATO', 'BOLA'] },
      Loco: { tipo: 'jabuti', brinquedos: ['SKATE', 'RATO'] },
    };

    this.brinquedosValidos = [
      'RATO', 'BOLA', 'LASER', 'CAIXA', 'NOVELO', 'SKATE'
    ];
  }

  encontraPessoas(brinquedosPessoa1, brinquedosPessoa2, ordemAnimais) {
    const listaAnimais = [];
    const adotados = { 1: 0, 2: 0 };

    // Validar duplicatas e brinquedos inválidos
    const validarBrinquedos = (brinquedos) => {
      const set = new Set();
      for (let b of brinquedos) {
        b = b.toUpperCase();
        if (!this.brinquedosValidos.includes(b) || set.has(b)) return false;
        set.add(b);
      }
      return true;
    };

    if (!validarBrinquedos(brinquedosPessoa1) || !validarBrinquedos(brinquedosPessoa2)) {
      return { erro: 'Brinquedo inválido' };
    }

    // Processar animais na ordem informada
    for (const nomeAnimal of ordemAnimais) {
      if (!this.animais[nomeAnimal]) {
        return { erro: 'Animal inválido' };
      }

      const animal = this.animais[nomeAnimal];
      const brinquedosAnimal = animal.brinquedos;

      // Função para checar se os brinquedos da pessoa incluem todos do animal na ordem correta
      const checaPessoa = (brinquedosPessoa) => {
        if (animal.tipo === 'gato') {
          let idx = 0;
          for (let b of brinquedosPessoa.map(x => x.toUpperCase())) {
            if (b === brinquedosAnimal[idx]) idx++;
          }
          return idx === brinquedosAnimal.length;
        } else if (nomeAnimal === 'Loco') {
          // Loco aceita qualquer ordem se houver outro animal adotado
          return (adotados[1] + adotados[2]) > 0;
        } else {
          // Cães: ordem importa
          let idx = 0;
          for (let b of brinquedosPessoa.map(x => x.toUpperCase())) {
            if (b === brinquedosAnimal[idx]) idx++;
          }
          return idx === brinquedosAnimal.length;
        }
      };

      const pode1 = checaPessoa(brinquedosPessoa1) && adotados[1] < 3;
      const pode2 = checaPessoa(brinquedosPessoa2) && adotados[2] < 3;

      if (pode1 && !pode2) {
        listaAnimais.push(`${nomeAnimal} - pessoa 1`);
        adotados[1]++;
      } else if (!pode1 && pode2) {
        listaAnimais.push(`${nomeAnimal} - pessoa 2`);
        adotados[2]++;
      } else {
        listaAnimais.push(`${nomeAnimal} - abrigo`);
      }
    }

    // Ordenar lista alfabeticamente
    listaAnimais.sort();

    return { lista: listaAnimais };
  }
}

module.exports = AbrigoAnimais;
